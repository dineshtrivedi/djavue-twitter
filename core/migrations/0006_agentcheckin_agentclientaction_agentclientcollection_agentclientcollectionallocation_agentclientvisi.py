# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-07-03 17:13
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_funeralinsurance'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgentCheckIn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_id', models.IntegerField()),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'agent_check_in',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgentClientAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_id', models.IntegerField()),
                ('device_id', models.IntegerField()),
                ('action_type', models.CharField(max_length=250)),
                ('created', models.DateTimeField()),
                ('meta_id', models.IntegerField()),
            ],
            options={
                'db_table': 'agent_client_action',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgentClientCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_user_id', models.IntegerField()),
                ('device_id', models.IntegerField()),
                ('payment_type', models.CharField(max_length=250)),
                ('payment_amount', models.CharField(max_length=250)),
                ('payment_signature_image', models.TextField()),
                ('payment_photo', models.TextField()),
                ('created', models.DateTimeField()),
                ('status', models.CharField(max_length=250)),
                ('notes', models.TextField()),
            ],
            options={
                'db_table': 'agent_client_collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgentClientCollectionAllocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.IntegerField()),
                ('agent_client_collection_id', models.IntegerField()),
                ('month', models.CharField(max_length=2)),
                ('year', models.CharField(max_length=4)),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'agent_client_collection_allocation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgentClientVisit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_user_id', models.IntegerField()),
                ('device_id', models.IntegerField()),
                ('visit_type', models.IntegerField()),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'agent_client_visit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgentLead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_user_id', models.IntegerField()),
                ('lead_name', models.CharField(max_length=250)),
                ('lead_mobile', models.CharField(max_length=10)),
                ('lead_action', models.CharField(max_length=250)),
                ('lead_follow_up_datetime', models.DateTimeField()),
                ('lead_source', models.TextField()),
                ('status', models.CharField(max_length=250)),
                ('closed_reason', models.TextField()),
                ('lead_created', models.DateTimeField()),
                ('lead_updated', models.DateTimeField()),
            ],
            options={
                'db_table': 'agent_lead',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgentNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_id', models.IntegerField()),
                ('heartbeat_id', models.IntegerField()),
                ('notification_type', models.CharField(max_length=250)),
                ('area_code', models.CharField(max_length=250)),
                ('created', models.DateTimeField()),
                ('notification_count', models.IntegerField()),
            ],
            options={
                'db_table': 'agent_notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgentSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_id', models.IntegerField()),
                ('schedule_date', models.DateField()),
                ('schedule_slot', models.IntegerField()),
            ],
            options={
                'db_table': 'agent_schedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgentTechnicalVisit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_id', models.IntegerField()),
                ('device_id', models.IntegerField()),
                ('created', models.DateTimeField()),
                ('meta', models.TextField()),
                ('location_latitude', models.CharField(max_length=250)),
                ('location_longitude', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'agent_technical_visit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgentTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_id', models.IntegerField()),
                ('description', models.CharField(max_length=250)),
                ('transaction_value', models.CharField(max_length=100)),
                ('agent_client_collection_id', models.IntegerField()),
                ('created_by', models.CharField(max_length=250)),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'agent_transaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgentUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('email', models.CharField(max_length=250)),
                ('password', models.CharField(max_length=128)),
                ('salt', models.CharField(max_length=32)),
                ('login_count', models.IntegerField()),
                ('last_login', models.DateTimeField()),
                ('created', models.DateTimeField()),
                ('mobile_number', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'agent_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgentUserArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_user_id', models.IntegerField()),
                ('area_id', models.IntegerField()),
            ],
            options={
                'db_table': 'agent_user_area',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgentVisit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_id', models.IntegerField()),
                ('device_id', models.IntegerField()),
                ('created', models.DateTimeField()),
                ('checklist_1', models.TextField()),
                ('checklist_2', models.TextField()),
                ('checklist_3', models.TextField()),
                ('checklist_4', models.TextField()),
                ('checklist_5', models.TextField()),
                ('checklist_6', models.TextField()),
                ('checklist_7', models.TextField()),
                ('checklist_8', models.TextField()),
                ('checklist_9', models.TextField()),
                ('checklist_pop', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'agent_visit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_task_iframe', models.TextField()),
            ],
            options={
                'db_table': 'app_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BytemoneyApi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.IntegerField()),
                ('api_result', models.TextField()),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'bytemoney_api',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClientPhotoHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.BigIntegerField()),
                ('photo_type', models.CharField(max_length=250)),
                ('photo_path', models.CharField(max_length=250)),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'client_photo_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Confirmation',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('structures_damaged', models.IntegerField(db_column='Structures_Damaged')),
                ('people_injured', models.IntegerField(db_column='People_Injured')),
                ('people_killed', models.IntegerField(db_column='People_Killed')),
                ('fire_dept_reported', models.TextField(db_column='Fire_Dept_Reported')),
                ('time_of_call', models.DateTimeField(db_column='Time_Of_Call')),
                ('number_called', models.TextField(db_column='Number_Called')),
                ('time_of_dispatch', models.DateTimeField(db_column='Time_Of_Dispatch')),
                ('time_of_first_vehicle', models.DateTimeField(db_column='Time_Of_First_Vehicle')),
                ('cause', models.TextField(db_column='Cause')),
                ('time_of_incident', models.DateTimeField(db_column='Time_Of_Incident')),
                ('question1', models.CharField(max_length=50)),
                ('question2', models.CharField(max_length=50)),
                ('question3', models.DateField()),
                ('question4', models.IntegerField()),
                ('question5', models.IntegerField()),
                ('question6', models.IntegerField()),
                ('question7', models.TextField()),
                ('question8', models.CharField(max_length=10)),
                ('question9', models.TextField()),
                ('question10', models.CharField(max_length=10)),
                ('question11', models.CharField(max_length=10)),
                ('question12', models.CharField(max_length=10)),
                ('question13', models.CharField(max_length=10)),
                ('question14', models.IntegerField()),
                ('question15', models.CharField(max_length=50)),
                ('question16', models.CharField(max_length=10)),
                ('question17', models.DateTimeField()),
                ('question18', models.CharField(max_length=10)),
                ('question19', models.CharField(max_length=10)),
                ('question20', models.CharField(max_length=10)),
                ('question21', models.CharField(max_length=250)),
                ('question22', models.CharField(max_length=250)),
                ('reporter_name', models.CharField(max_length=100)),
                ('reporter_lastname', models.CharField(max_length=100)),
                ('reporter_mobile', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'Confirmation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Confirmationheartbeat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmation_id', models.IntegerField()),
                ('heartbeat_id', models.IntegerField()),
            ],
            options={
                'db_table': 'ConfirmationHeartbeat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code', models.CharField(max_length=2)),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_barcode', models.CharField(max_length=128)),
                ('location_gps_latitude', models.CharField(max_length=64)),
                ('location_gps_longitude', models.CharField(max_length=64)),
                ('location_name', models.CharField(max_length=250)),
                ('location_house_number', models.CharField(max_length=64)),
                ('location_number_rooms', models.IntegerField()),
                ('location_household_language', models.CharField(max_length=250)),
                ('location_household_value', models.CharField(max_length=250)),
                ('location_front_door_image', models.CharField(max_length=250)),
                ('location_front_door_image_type', models.CharField(max_length=32)),
                ('customer_first_name', models.CharField(max_length=250)),
                ('customer_last_name', models.CharField(max_length=250)),
                ('customer_mobile_number', models.CharField(max_length=64)),
                ('device_photo', models.CharField(max_length=250)),
                ('device_photo_type', models.IntegerField()),
                ('system_created', models.DateTimeField()),
                ('system_agent_id', models.IntegerField()),
                ('system_agent_info', models.CharField(max_length=250)),
                ('system_app_type', models.CharField(max_length=250)),
                ('notes', models.TextField()),
                ('sniffers_areas_code', models.CharField(max_length=50)),
                ('agent_name', models.CharField(max_length=50)),
                ('agent_mobile_number', models.CharField(max_length=30)),
                ('receive_sms', models.IntegerField()),
                ('insurance_policy_number', models.CharField(max_length=250)),
                ('insurance_policy_type_name', models.CharField(max_length=250)),
                ('insurance_policy_premium', models.IntegerField()),
                ('insurance_expected_payment_method', models.CharField(max_length=250)),
                ('insurance_expected_payment_date', models.IntegerField()),
                ('insurance_policy_lapse_date', models.DateField()),
                ('insurance_application_captured_date', models.DateField()),
                ('insurance_policy_sign_up_date', models.DateField()),
                ('insurance_commencement_date', models.DateField()),
                ('insurance_agent_name', models.CharField(max_length=250)),
                ('insurance_region_name', models.CharField(max_length=250)),
                ('insurance_last_verification_date', models.DateField()),
                ('insurance_member_name', models.CharField(max_length=250)),
                ('insurance_member_ids', models.CharField(max_length=250)),
                ('insurance_cellphone_number', models.CharField(max_length=20)),
                ('insurance_alternative_contact_details', models.CharField(max_length=20)),
                ('insurance_physical_addresses', models.CharField(max_length=250)),
                ('insurance_date_of_birth', models.DateField()),
                ('insurance_gender', models.CharField(max_length=20)),
                ('insurance_agent_vendor_id', models.IntegerField()),
                ('insurance_kin_first_name', models.CharField(max_length=250)),
                ('insurance_kin_last_name', models.CharField(max_length=250)),
                ('insurance_kin_id_number', models.CharField(max_length=250)),
                ('insurance_kin_dob', models.CharField(max_length=250)),
                ('insurance_kin_gender', models.CharField(max_length=250)),
                ('insurance_kin_cell', models.CharField(max_length=250)),
                ('insurance_referral_name', models.CharField(max_length=250)),
                ('insurance_income_source', models.CharField(max_length=250)),
                ('photo_outside', models.CharField(max_length=250)),
                ('photo_left', models.CharField(max_length=250)),
                ('photo_right', models.CharField(max_length=250)),
                ('photo_client', models.CharField(max_length=250)),
                ('photo_device', models.CharField(max_length=250)),
                ('photo_inside_left', models.CharField(max_length=250)),
                ('photo_inside_right', models.CharField(max_length=250)),
                ('photo_inside_one', models.CharField(max_length=250)),
                ('photo_inside_two', models.CharField(max_length=250)),
                ('system_contract_received', models.IntegerField()),
                ('status', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'device',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceHouseholdOccupant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.IntegerField()),
                ('first_name', models.CharField(max_length=80)),
                ('last_name', models.CharField(max_length=80)),
                ('id_number', models.CharField(max_length=30)),
                ('mobile_number', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'device_household_occupant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceMerge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_barcode', models.CharField(max_length=128)),
                ('location_gps_latitude', models.CharField(max_length=64)),
                ('location_gps_longitude', models.CharField(max_length=64)),
                ('location_name', models.CharField(max_length=250)),
                ('location_house_number', models.CharField(max_length=64)),
                ('location_number_rooms', models.IntegerField()),
                ('location_front_door_image', models.CharField(max_length=250)),
                ('location_front_door_image_type', models.CharField(max_length=32)),
                ('customer_first_name', models.CharField(max_length=250)),
                ('customer_last_name', models.CharField(max_length=250)),
                ('customer_mobile_number', models.CharField(max_length=64)),
                ('device_photo', models.CharField(max_length=250)),
                ('device_photo_type', models.IntegerField()),
                ('system_created', models.DateTimeField()),
                ('system_agent_id', models.IntegerField()),
                ('notes', models.TextField()),
            ],
            options={
                'db_table': 'device_merge',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailAddresses',
            fields=[
                ('index', models.BigAutoField(db_column='INDEX', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='NAME', max_length=40)),
                ('email_address', models.CharField(db_column='EMAIL_ADDRESS', max_length=50)),
                ('phone_num', models.CharField(db_column='PHONE_NUM', max_length=14)),
                ('info_level', models.IntegerField(db_column='INFO_LEVEL')),
                ('section_list', models.TextField(db_column='SECTION_LIST')),
                ('password', models.CharField(max_length=32)),
                ('salt', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'Email_Addresses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExplorerQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('sql', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('last_run_date', models.DateTimeField()),
                ('snapshot', models.IntegerField()),
            ],
            options={
                'db_table': 'explorer_query',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExplorerQuerylog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sql', models.TextField(blank=True, null=True)),
                ('run_at', models.DateTimeField()),
                ('duration', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'explorer_querylog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_id', models.IntegerField()),
                ('message', models.CharField(max_length=250)),
                ('created', models.DateTimeField()),
                ('area_code', models.CharField(blank=True, max_length=20, null=True)),
                ('device_uid', models.CharField(max_length=12)),
            ],
            options={
                'db_table': 'feed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeedUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('feed_id', models.IntegerField()),
            ],
            options={
                'db_table': 'feed_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FieldTestLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uid', models.CharField(db_column='uID', max_length=11)),
                ('sniffer_num', models.CharField(db_column='Sniffer_num', max_length=6)),
                ('alert_level', models.IntegerField(db_column='Alert_level')),
                ('alert_data', models.CharField(db_column='Alert_data', max_length=11)),
                ('mesh_rssi', models.IntegerField()),
                ('date_time', models.DateTimeField(db_column='Date_Time')),
            ],
            options={
                'db_table': 'field_test_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Heartbeats',
            fields=[
                ('beat_num', models.BigAutoField(db_column='Beat_num', primary_key=True, serialize=False)),
                ('uid', models.CharField(blank=True, db_column='uID', max_length=11, null=True)),
                ('sniffer_num', models.IntegerField(blank=True, db_column='Sniffer_num', null=True)),
                ('alert_level', models.IntegerField(blank=True, db_column='Alert_level', null=True)),
                ('alert_data', models.IntegerField(db_column='Alert_data')),
                ('batt_level', models.IntegerField(blank=True, db_column='Batt_level', null=True)),
                ('sig_strength', models.IntegerField(blank=True, db_column='Sig_Strength', null=True)),
                ('mesh_rssi', models.IntegerField()),
                ('gps_time', models.TimeField(blank=True, db_column='GPS_time', null=True)),
                ('gps_date', models.DateField(blank=True, db_column='GPS_date', null=True)),
                ('gps_lock', models.IntegerField(blank=True, db_column='GPS_lock', null=True)),
                ('latitude', models.CharField(blank=True, db_column='Latitude', max_length=30, null=True)),
                ('longitude', models.CharField(blank=True, db_column='Longitude', max_length=30, null=True)),
                ('temp', models.IntegerField(db_column='Temp')),
                ('action', models.IntegerField(db_column='Action')),
                ('sim', models.IntegerField(blank=True, db_column='SIM', null=True)),
                ('reset', models.IntegerField(blank=True, db_column='Reset', null=True)),
                ('server_time', models.BigIntegerField(db_column='Server_Time')),
                ('date_time', models.DateTimeField(blank=True, db_column='Date_Time', null=True)),
                ('confirmation_id', models.CharField(db_column='Confirmation_ID', max_length=16)),
            ],
            options={
                'db_table': 'Heartbeats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Impact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.IntegerField(unique=True)),
                ('kills', models.FloatField()),
                ('injures', models.FloatField()),
                ('destroys', models.FloatField()),
                ('displaces', models.FloatField()),
                ('municipality_cost', models.IntegerField()),
                ('average_shack_value', models.IntegerField()),
                ('total_shacks_sa', models.IntegerField()),
            ],
            options={
                'db_table': 'impact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PushToPay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(db_column='uID', max_length=10)),
                ('gateway_imei', models.IntegerField()),
                ('is_a_client_at_time_of_push', models.IntegerField()),
                ('agent_at_time_of_push', models.IntegerField()),
                ('detector_batt_level', models.IntegerField()),
                ('rssi', models.IntegerField()),
                ('time_created', models.DateTimeField()),
                ('payment_collected_within_hour', models.IntegerField()),
                ('payment_collected_within_day', models.IntegerField()),
                ('alert_level', models.IntegerField()),
                ('sms_was_sent', models.IntegerField()),
            ],
            options={
                'db_table': 'push_to_pay',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PushToPayFieldTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(db_column='uID', max_length=10)),
                ('gateway_imei', models.IntegerField()),
                ('detector_batt_level', models.IntegerField()),
                ('rssi_threshold', models.IntegerField()),
                ('gateway_rssi', models.IntegerField()),
                ('alert_level', models.IntegerField()),
                ('time_created', models.DateTimeField()),
            ],
            options={
                'db_table': 'push_to_pay_field_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('index', models.BigAutoField(db_column='Index', primary_key=True, serialize=False)),
                ('opt_out', models.IntegerField(db_column='Opt_Out')),
                ('registered_succesfully', models.IntegerField(db_column='Registered_Succesfully')),
                ('number', models.CharField(db_column='Number', max_length=15)),
                ('area', models.CharField(db_column='Area', max_length=10)),
                ('interactions', models.IntegerField(db_column='Interactions')),
                ('failures', models.IntegerField(db_column='Failures')),
                ('initial_date', models.DateTimeField(blank=True, db_column='Initial_Date', null=True)),
                ('last_date', models.DateTimeField(blank=True, db_column='Last_Date', null=True)),
            ],
            options={
                'db_table': 'Registration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegistrationLog',
            fields=[
                ('index', models.AutoField(db_column='Index', primary_key=True, serialize=False)),
                ('api_id', models.CharField(db_column='Api_ID', max_length=8)),
                ('from_num', models.CharField(db_column='From_Num', max_length=15)),
                ('to_num', models.CharField(db_column='To_Num', max_length=15)),
                ('mo_id', models.CharField(db_column='Mo_ID', max_length=12)),
                ('text', models.TextField(db_column='Text')),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
            ],
            options={
                'db_table': 'Registration_Log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResponseInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_log_id', models.IntegerField()),
                ('question1', models.TextField()),
                ('question2', models.TextField()),
                ('question3', models.TextField()),
                ('question4', models.TextField()),
                ('question5', models.TextField()),
                ('created', models.DateTimeField()),
                ('created_by', models.IntegerField()),
            ],
            options={
                'db_table': 'response_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SentMessages',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('area_code', models.CharField(db_column='Area_Code', max_length=6)),
                ('type', models.CharField(db_column='Type', max_length=20)),
                ('date_sent', models.DateTimeField(db_column='Date_Sent')),
                ('end_users', models.IntegerField(db_column='End_Users')),
                ('device_uid', models.CharField(max_length=12)),
                ('result', models.TextField(db_column='Result')),
            ],
            options={
                'db_table': 'Sent_Messages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('sms_time_limit', models.IntegerField()),
                ('alerts_status', models.IntegerField()),
                ('battery_level_warning', models.IntegerField()),
                ('heartbeat_time', models.IntegerField()),
                ('ring_fence_distance', models.IntegerField()),
                ('agent_timeout', models.IntegerField()),
            ],
            options={
                'db_table': 'settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SigfoxHeartbeats',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uid', models.CharField(db_column='uID', max_length=11)),
                ('sniffer_num', models.CharField(db_column='Sniffer_num', max_length=6)),
                ('alert_level', models.IntegerField(db_column='Alert_level')),
                ('alert_data', models.CharField(db_column='Alert_data', max_length=11)),
                ('mesh_rssi', models.IntegerField()),
                ('rssi', models.FloatField()),
                ('snr', models.FloatField()),
                ('snr_avg', models.FloatField()),
                ('date_time', models.DateTimeField(db_column='Date_Time')),
            ],
            options={
                'db_table': 'sigfox_heartbeats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SnifferErrors',
            fields=[
                ('index', models.BigAutoField(db_column='Index', primary_key=True, serialize=False)),
                ('sniffer_num', models.IntegerField(db_column='Sniffer_num')),
                ('error_code', models.CharField(db_column='Error_code', max_length=20)),
                ('error', models.CharField(db_column='Error', max_length=300)),
                ('sig_strength', models.IntegerField(db_column='Sig_Strength')),
                ('batt_level', models.IntegerField(db_column='Batt_level')),
                ('error_time', models.DateTimeField(db_column='Error_Time')),
                ('date_time', models.DateTimeField(db_column='Date_Time')),
            ],
            options={
                'db_table': 'Sniffer_Errors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SniffersAreas',
            fields=[
                ('index', models.BigAutoField(db_column='INDEX', primary_key=True, serialize=False)),
                ('sniffer_num', models.BigIntegerField(db_column='SNIFFER_NUM')),
                ('phone_num', models.TextField(db_column='PHONE_NUM')),
                ('area_name', models.CharField(db_column='AREA_NAME', max_length=50)),
                ('startnetfunc', models.IntegerField(db_column='StartNetFunc')),
                ('stopnetfunc', models.IntegerField(db_column='StopNetFunc')),
                ('ringalarms', models.IntegerField(db_column='RingAlarms')),
                ('silenttest', models.IntegerField(db_column='SilentTest')),
                ('batt_level', models.IntegerField(db_column='BATT_LEVEL')),
                ('last_heartbeat', models.DateTimeField(db_column='LAST_HEARTBEAT')),
                ('monitoring', models.IntegerField(db_column='MONITORING')),
                ('last_checked', models.DateTimeField(db_column='LAST_CHECKED')),
                ('notes', models.TextField(db_column='Notes')),
                ('code', models.CharField(db_column='Code', max_length=6)),
                ('county', models.IntegerField()),
                ('sensitivity', models.IntegerField()),
                ('status', models.IntegerField()),
                ('gps_lat', models.CharField(max_length=250)),
                ('gps_long', models.CharField(max_length=250)),
                ('gps_lat_average', models.CharField(max_length=100)),
                ('gps_long_average', models.CharField(max_length=100)),
                ('device_installed', models.IntegerField(blank=True, null=True)),
                ('new', models.IntegerField()),
            ],
            options={
                'db_table': 'Sniffers_Areas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatusPings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sniffer_number', models.IntegerField(db_column='Sniffer_number')),
                ('uid', models.CharField(db_column='uID', max_length=11)),
                ('status_data', models.IntegerField(db_column='Status_Data')),
                ('max_temp', models.SmallIntegerField(db_column='Max_Temp')),
                ('min_temp', models.SmallIntegerField(db_column='Min_Temp')),
                ('ror10_max', models.SmallIntegerField(db_column='ROR10_Max')),
                ('batt_volt', models.CharField(db_column='Batt_Volt', max_length=20)),
                ('rssi', models.FloatField(db_column='RSSI')),
                ('mesh_rssi', models.SmallIntegerField()),
                ('server_time', models.DateTimeField(db_column='Server_Time')),
            ],
            options={
                'db_table': 'Status_Pings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UniqueIds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.IntegerField(db_column='Device_ID')),
                ('timestamp', models.DateTimeField(db_column='TimeStamp')),
                ('firmware_version', models.CharField(db_column='Firmware_Version', max_length=10)),
            ],
            options={
                'db_table': 'Unique_IDs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('index', models.AutoField(db_column='Index', primary_key=True, serialize=False)),
                ('sniffer_num', models.IntegerField(db_column='Sniffer_Num')),
                ('date_time', models.DateTimeField(db_column='Date_Time')),
                ('longitude', models.CharField(db_column='Longitude', max_length=11)),
                ('latitude', models.CharField(db_column='Latitude', max_length=11)),
                ('city', models.CharField(db_column='City', max_length=11)),
                ('temp', models.IntegerField(db_column='Temp')),
                ('humidity', models.IntegerField(db_column='Humidity')),
                ('cloud_percentage', models.IntegerField(db_column='Cloud_Percentage')),
                ('wind_speed', models.IntegerField(db_column='Wind_Speed')),
                ('wind_direction', models.IntegerField(db_column='Wind_Direction')),
                ('rain', models.IntegerField(db_column='Rain')),
            ],
            options={
                'db_table': 'Weather_Data',
                'managed': False,
            },
        ),
    ]
